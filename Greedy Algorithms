# Minimum Waiting Time
def minimumWaitingTime(queries):
    queries.sort()
    totalCount=0
    for idx, duration in enumerate(queries):
        queriesLeft=len(queries)-(idx+1)
        totalCount+= duration*queriesLeft
    return totalCount
-----------------------------   

# Class Photos
def classPhotos(redShirtHeights,blueShirtHeights):
    redShirtHeights.sort(reverse=True)
    blueShirtHeights.sort(reverse=True)
    
    secondRow="Red Shirt" if redShirtHeights[0]>blueShirtHeights[0] else "Blue Shirt"
    
    for i in range(len(redShirtHeights)):
        redShirtStudent=redShirtHeights[i]
        blueShirtStudent=blueShirtHeights[i]
        
        if secondRow=="Red Shirt":
            if redShirtStudent<=blueShirtStudent:
                return False
        else:
            if blueShirtStudent<=redShirtStudent:
                return False
    return True
  ----------------------------
  
  # Tandem Bicycle
  def tandemBicycle(redShirtSpeeds,blueShirtSpeeds,fastest):
    redShirtSpeeds.sort()
    blueShirtSpeeds.sort()
    
    if fastest==True:
        reverseTheString(redShirtSpeeds)
    totalSpeed=0
    
    for idx in range(len(redShirtSpeeds)):
        redShirt=redShirtSpeeds[idx]
        blueShirt=blueShirtSpeeds[idx]
        
        totalSpeed+=max(redShirt,blueShirt)
        
    return totalSpeed

def reverseTheString(array):
    startIdx=0
    endIdx=len(array)-1
    
    while startIdx<endIdx:
        array[endIdx],array[startIdx]=array[startIdx],array[endIdx]
        startIdx+=1
        endIdx-=1
    
    return array
 
---------------------------------------
